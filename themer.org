#+TITLE: themer
#+AUTHOR: Yilkal Argaw , StackOverflow, Github, Emacs-wiki and The Internet in General
#+HTML_HEAD: <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">
#+INFOJS_OPT: view:overview toc:3 ltoc:3 mouse:underline buttons:0 path:https://orgmode.org/worg/code/org-info-js/org-info-src.js
#+OPTIONS: ^:nil
#+OPTIONS: _:nil
#+EXCLUDE_TAGS: noexport
#+PROPERTY: header-args :tangle compiled/themer.el

* beginning commentary
#+begin_src emacs-lisp
;;; themer.el --- Theme Generator. -*- lexical-binding: t -*-

;;; Commentary:
;;
;; Emacs HEAD (27+) introduces early-init.el, which is run before init.el,
;; before package and UI initialization happens.
;;

;;; Code:

#+end_src

* Define palettes and theme macro (no tangle)
#+BEGIN_SRC emacs-lisp
(defcustom rtfm-color-palettes
  '((palenight
     . ((rtfm-ansi-black         . "#292d3e")
        (rtfm-ansi-blue          . "#82aaff")
        (rtfm-ansi-brightblack   . "#676e95")
        (rtfm-ansi-brightblue    . "#82aaff")
        (rtfm-ansi-brightcyan    . "#89ddff")
        (rtfm-ansi-brightgreen   . "#c3e88d")
        (rtfm-ansi-brightmagenta . "#c792ea")
        (rtfm-ansi-brightred     . "#f07178")
        (rtfm-ansi-brightwhite   . "#ffffff")
        (rtfm-ansi-brightyellow  . "#ffcb6b")
        (rtfm-ansi-cyan          . "#89ddff")
        (rtfm-ansi-green         . "#c3e88d")
        (rtfm-ansi-magenta       . "#c792ea")
        (rtfm-ansi-red           . "#f07178")
        (rtfm-ansi-white         . "#959dcb")
        (rtfm-ansi-yellow        . "#ffcb6b")))

    (nordic-darker
     . ((rtfm-ansi-black         . "#2e3440")
        (rtfm-ansi-brightblack   . "#525d72")

        (rtfm-ansi-red           . "#e16a70")
        (rtfm-ansi-brightred     . "#ff8c94")

        (rtfm-ansi-green         . "#b1d380")
        (rtfm-ansi-brightgreen   . "#d5f7a3")

        (rtfm-ansi-yellow        . "#ffcb6b")
        (rtfm-ansi-brightyellow  . "#ffe399")

        ;; (rtfm-ansi-blue          . "#7498e4")
        ;; (rtfm-ansi-brightblue    . "#a5cfff")

        (rtfm-ansi-blue          . "#678be3")
        (rtfm-ansi-brightblue    . "#82beff")
        
        (rtfm-ansi-magenta       . "#ad7fcc")
        (rtfm-ansi-brightmagenta . "#e1b0ff")

        (rtfm-ansi-cyan          . "#76bfdc")
        (rtfm-ansi-brightcyan    . "#b3eaff")

        (rtfm-ansi-white         . "#848bb4")
        (rtfm-ansi-brightwhite   . "#d8dee9")

        (rtfm-foreground         . "#959dcb")
        (rtfm-background         . "#2e3440")))

    (harmonic-dark
     . ((rtfm-ansi-black         . "#0B1C2C")
        (rtfm-ansi-blue          . "#8B56BF")
        (rtfm-ansi-brightblack   . "#627E99")
        (rtfm-ansi-brightblue    . "#8B56BF")
        (rtfm-ansi-brightcyan    . "#568BBF")
        (rtfm-ansi-brightgreen   . "#56BF8B")
        (rtfm-ansi-brightmagenta . "#BF568B")
        (rtfm-ansi-brightred     . "#BF8B56")
        (rtfm-ansi-brightwhite   . "#F7F9FB")
        (rtfm-ansi-brightyellow  . "#8BBF56")
        (rtfm-ansi-cyan          . "#568BBF")
        (rtfm-ansi-green         . "#56BF8B")
        (rtfm-ansi-magenta       . "#BF568B")
        (rtfm-ansi-red           . "#BF8B56")
        (rtfm-ansi-white         . "#CBD6E2")
        (rtfm-ansi-yellow        . "#8BBF56")))

    (grayscale-dark
     . ((rtfm-ansi-black         . "#101010")
        (rtfm-ansi-blue          . "#686868")
        (rtfm-ansi-brightblack   . "#4c566a")
        (rtfm-ansi-brightblue    . "#686868")
        (rtfm-ansi-brightcyan    . "#868686")
        (rtfm-ansi-brightgreen   . "#8e8e8e")
        (rtfm-ansi-brightmagenta . "#747474")
        (rtfm-ansi-brightred     . "#7c7c7c")
        (rtfm-ansi-brightwhite   . "#f7f7f7")
        (rtfm-ansi-brightyellow  . "#a0a0a0")
        (rtfm-ansi-cyan          . "#868686")
        (rtfm-ansi-green         . "#8e8e8e")
        (rtfm-ansi-magenta       . "#747474")
        (rtfm-ansi-red           . "#7c7c7c")
        (rtfm-ansi-white         . "#e5e9f0")
        (rtfm-ansi-yellow        . "#a0a0a0")))

    (brewer
     . ((rtfm-ansi-black         . "#0c0d0e")
        (rtfm-ansi-blue          . "#3182bd")
        (rtfm-ansi-brightblack   . "#737475")
        (rtfm-ansi-brightblue    . "#3182bd")
        (rtfm-ansi-brightcyan    . "#80b1d3")
        (rtfm-ansi-brightgreen   . "#31a354")
        (rtfm-ansi-brightmagenta . "#756bb1")
        (rtfm-ansi-brightred     . "#e31a1c")
        (rtfm-ansi-brightwhite   . "#fcfdfe")
        (rtfm-ansi-brightyellow  . "#dca060")
        (rtfm-ansi-cyan          . "#80b1d3")
        (rtfm-ansi-green         . "#31a354")
        (rtfm-ansi-magenta       . "#756bb1")
        (rtfm-ansi-red           . "#e31a1c")
        (rtfm-ansi-white         . "#b7b8b9")
        (rtfm-ansi-yellow        . "#dca060")))

    (grayscale-light
     . ((rtfm-ansi-black         . "#f7f7f7")
        (rtfm-ansi-blue          . "#686868")
        (rtfm-ansi-brightblack   . "#ababab")
        (rtfm-ansi-brightblue    . "#686868")
        (rtfm-ansi-brightcyan    . "#868686")
        (rtfm-ansi-brightgreen   . "#8e8e8e")
        (rtfm-ansi-brightmagenta . "#747474")
        (rtfm-ansi-brightred     . "#7c7c7c")
        (rtfm-ansi-brightwhite   . "#101010")
        (rtfm-ansi-brightyellow  . "#a0a0a0")
        (rtfm-ansi-cyan          . "#868686")
        (rtfm-ansi-green         . "#8e8e8e")
        (rtfm-ansi-magenta       . "#747474")
        (rtfm-ansi-red           . "#7c7c7c")
        (rtfm-ansi-white         . "#464646")
        (rtfm-ansi-yellow        . "#a0a0a0")))

    (nord
     . ((rtfm-ansi-black         . "#2e3440")
        (rtfm-ansi-blue          . "#ebcb8b")
        (rtfm-ansi-brightblack   . "#4c566a")
        (rtfm-ansi-brightblue    . "#ebcb8b")
        (rtfm-ansi-brightcyan    . "#d08770")
        (rtfm-ansi-brightgreen   . "#bf616a")
        (rtfm-ansi-brightmagenta . "#a3be8c")
        (rtfm-ansi-brightred     . "#88c0d0")
        (rtfm-ansi-brightwhite   . "#8fbcbb")
        (rtfm-ansi-brightyellow  . "#5e81ac")
        (rtfm-ansi-cyan          . "#d08770")
        (rtfm-ansi-green         . "#bf616a")
        (rtfm-ansi-magenta       . "#a3be8c")
        (rtfm-ansi-red           . "#88c0d0")
        (rtfm-ansi-white         . "#e5e9f0")
        (rtfm-ansi-yellow        . "#5e81ac")))

    (solarized-dark
     . ((rtfm-ansi-black         . "#002b36")
        (rtfm-ansi-blue          . "#268bd2")
        (rtfm-ansi-brightblack   . "#657b83")
        (rtfm-ansi-brightblue    . "#268bd2")
        (rtfm-ansi-brightcyan    . "#2aa198")
        (rtfm-ansi-brightgreen   . "#859900")
        (rtfm-ansi-brightmagenta . "#6c71c4")
        (rtfm-ansi-brightred     . "#dc322f")
        (rtfm-ansi-brightwhite   . "#fdf6e3")
        (rtfm-ansi-brightyellow  . "#b58900")
        (rtfm-ansi-cyan          . "#2aa198")
        (rtfm-ansi-green         . "#859900")
        (rtfm-ansi-magenta       . "#6c71c4")
        (rtfm-ansi-red           . "#dc322f")
        (rtfm-ansi-white         . "#93a1a1")
        (rtfm-ansi-yellow        . "#b58900")))

    (solarized-light
     . ((rtfm-ansi-black         . "#fdf6e3")
        (rtfm-ansi-blue          . "#268bd2")
        (rtfm-ansi-brightblack   . "#839496")
        (rtfm-ansi-brightblue    . "#268bd2")
        (rtfm-ansi-brightcyan    . "#2aa198")
        (rtfm-ansi-brightgreen   . "#859900")
        (rtfm-ansi-brightmagenta . "#6c71c4")
        (rtfm-ansi-brightred     . "#dc322f")
        (rtfm-ansi-brightwhite   . "#002b36")
        (rtfm-ansi-brightyellow  . "#b58900")
        (rtfm-ansi-cyan          . "#2aa198")
        (rtfm-ansi-green         . "#859900")
        (rtfm-ansi-magenta       . "#6c71c4")
        (rtfm-ansi-red           . "#dc322f")
        (rtfm-ansi-white         . "#586e75")
        (rtfm-ansi-yellow        . "#b58900")))

    (one-dark
     . ((rtfm-ansi-black        . "#282c34")
        (rtfm-ansi-red          . "#e06c75")
        (rtfm-ansi-green        . "#98c379")
        (rtfm-ansi-yellow       . "#e5c07b")
        (rtfm-ansi-blue         . "#61afef")
        (rtfm-ansi-magenta      . "#c678dd")
        (rtfm-ansi-cyan         . "#56b6c2")
        (rtfm-ansi-white        . "#abb2bf")
        (rtfm-ansi-brightblack  . "#545862")
        (rtfm-ansi-brightred    . "#e06c75")
        (rtfm-ansi-brightgreen  . "#98c379")
        (rtfm-ansi-brightyellow . "#e5c07b")
        (rtfm-ansi-brightblue   . "#61afef")
        (rtfm-ansi-brightmagenta. "#c678dd")
        (rtfm-ansi-brightcyan   . "#56b6c2")
        (rtfm-ansi-brightwhite  . "#c8ccd4")))

    ;; (noone-dark
    ;;  . ((rtfm-ansi-black         . "#282c34")
    ;;     (rtfm-ansi-brightblack   . "#7f8494")
    ;;     (rtfm-ansi-red           . "#e06c75")
    ;;     (rtfm-ansi-brightred     . "#ff8f97")
    ;;     (rtfm-ansi-green         . "#98c379")
    ;;     (rtfm-ansi-brightgreen   . "#c0f2a6")
    ;;     (rtfm-ansi-yellow        . "#e5c07b")
    ;;     (rtfm-ansi-brightyellow  . "#fce87f")
    ;;     (rtfm-ansi-blue          . "#61afef")
    ;;     (rtfm-ansi-brightblue    . "#9ad1ff")
    ;;     (rtfm-ansi-magenta       . "#c678dd")
    ;;     (rtfm-ansi-brightmagenta . "#e0b1ff")
    ;;     (rtfm-ansi-cyan          . "#56c2c2")
    ;;     (rtfm-ansi-brightcyan    . "#8ae0f7")
    ;;     (rtfm-ansi-white         . "#abb2bf")
    ;;     (rtfm-ansi-brightwhite   . "#f0f4fb")))

    ;; (noone-dark
    ;;  . ((rtfm-ansi-black        . "#2e3440")
    ;;     (rtfm-ansi-red          . "#e06c75")
    ;;     (rtfm-ansi-green        . "#98c379")
    ;;     (rtfm-ansi-yellow       . "#e5c07b")
    ;;     (rtfm-ansi-blue         . "#61afef")
    ;;     (rtfm-ansi-magenta      . "#c678dd")
    ;;     (rtfm-ansi-cyan         . "#56b6c2")
    ;;     (rtfm-ansi-white        . "#abb2bf")
    ;;     (rtfm-ansi-brightblack  . "#4c566a")  ; brighter dark gray
    ;;     (rtfm-ansi-brightred    . "#ff6c6b")  ; more vivid red
    ;;     (rtfm-ansi-brightgreen  . "#b4f27b")  ; brighter lime green
    ;;     (rtfm-ansi-brightyellow . "#f0db6e")  ; brighter yellow
    ;;     (rtfm-ansi-brightblue   . "#7fc1ff")  ; lighter blue
    ;;     (rtfm-ansi-brightmagenta. "#d8a9e3")  ; lighter magenta
    ;;     (rtfm-ansi-brightcyan   . "#63e2e8")  ; brighter cyan
    ;;     (rtfm-ansi-brightwhite  . "#e6e9ef"))) ; near white

    (noone-dark
     . ((rtfm-ansi-black        . "#2e3440")
        (rtfm-ansi-red          . "#e06c75")
        (rtfm-ansi-green        . "#98c379")
        (rtfm-ansi-yellow       . "#e5c07b")
        (rtfm-ansi-blue         . "#61afef")
        (rtfm-ansi-magenta      . "#c678dd")
        (rtfm-ansi-cyan         . "#56b6c2")
        (rtfm-ansi-white        . "#abb2bf")
        (rtfm-ansi-brightblack  . "#5c667a")  ; was "#4c566a"         ;; Adjusted bright black for better readability: lighter and more contrast
        (rtfm-ansi-brightred    . "#ff6c6b")
        (rtfm-ansi-brightgreen  . "#b4f27b")
        (rtfm-ansi-brightyellow . "#f0db6e")
        (rtfm-ansi-brightblue   . "#7fc1ff")
        (rtfm-ansi-brightmagenta. "#d8a9e3")
        (rtfm-ansi-brightcyan   . "#63e2e8")
        (rtfm-ansi-brightwhite  . "#d9dce3")))  ; was "#e6e9ef"         ;; Adjusted bright white for better readability: slightly darker and warmer off-white

    (unikitty-dark
     . ((rtfm-ansi-black        . "#2e2a31")
        (rtfm-ansi-red          . "#d8137f")
        (rtfm-ansi-green        . "#17ad98")
        (rtfm-ansi-yellow       . "#dc8a0e")
        (rtfm-ansi-blue         . "#796af5")
        (rtfm-ansi-magenta      . "#bb60ea")
        (rtfm-ansi-cyan         . "#149bda")
        (rtfm-ansi-white        . "#bcbabe")
        (rtfm-ansi-brightblack  . "#838085")
        (rtfm-ansi-brightred    . "#d8137f")
        (rtfm-ansi-brightgreen  . "#17ad98")
        (rtfm-ansi-brightyellow . "#dc8a0e")
        (rtfm-ansi-brightblue   . "#796af5")
        (rtfm-ansi-brightmagenta. "#bb60ea")
        (rtfm-ansi-brightcyan   . "#149bda")
        (rtfm-ansi-brightwhite  . "#f5f4f7")))

    (unikitty-light
     . ((rtfm-ansi-black        . "#ffffff")
        (rtfm-ansi-red          . "#d8137f")
        (rtfm-ansi-green        . "#17ad98")
        (rtfm-ansi-yellow       . "#dc8a0e")
        (rtfm-ansi-blue         . "#775dff")
        (rtfm-ansi-magenta      . "#aa17e6")
        (rtfm-ansi-cyan         . "#149bda")
        (rtfm-ansi-white        . "#6c696e")
        (rtfm-ansi-brightblack  . "#a7a5a8")
        (rtfm-ansi-brightred    . "#d8137f")
        (rtfm-ansi-brightgreen  . "#17ad98")
        (rtfm-ansi-brightyellow . "#dc8a0e")
        (rtfm-ansi-brightblue   . "#775dff")
        (rtfm-ansi-brightmagenta. "#aa17e6")
        (rtfm-ansi-brightcyan   . "#149bda")
        (rtfm-ansi-brightwhite  . "#322d34")))

    (dracula
     . ((rtfm-ansi-black        . "#282936")
        (rtfm-ansi-red          . "#ea51b2")
        (rtfm-ansi-green        . "#ebff87")
        (rtfm-ansi-yellow       . "#00f769")
        (rtfm-ansi-blue         . "#62d6e8")
        (rtfm-ansi-magenta      . "#b45bcf")
        (rtfm-ansi-cyan         . "#a1efe4")
        (rtfm-ansi-white        . "#e9e9f4")
        (rtfm-ansi-brightblack  . "#626483")
        (rtfm-ansi-brightred    . "#ea51b2")
        (rtfm-ansi-brightgreen  . "#ebff87")
        (rtfm-ansi-brightyellow . "#00f769")
        (rtfm-ansi-brightblue   . "#62d6e8")
        (rtfm-ansi-brightmagenta. "#b45bcf")
        (rtfm-ansi-brightcyan   . "#a1efe4")
        (rtfm-ansi-brightwhite  . "#f7f7fb")))

    (monokai
     . ((rtfm-ansi-black        . "#272822")
        (rtfm-ansi-red          . "#f92672")
        (rtfm-ansi-green        . "#a6e22e")
        (rtfm-ansi-yellow       . "#f4bf75")
        (rtfm-ansi-blue         . "#66d9ef")
        (rtfm-ansi-magenta      . "#ae81ff")
        (rtfm-ansi-cyan         . "#a1efe4")
        (rtfm-ansi-white        . "#f8f8f2")
        (rtfm-ansi-brightblack  . "#75715e")
        (rtfm-ansi-brightred    . "#fd971f")
        (rtfm-ansi-brightgreen  . "#9bcf34")
        (rtfm-ansi-brightyellow . "#e6db74")
        (rtfm-ansi-brightblue   . "#5dade2")
        (rtfm-ansi-brightmagenta. "#d336d3")
        (rtfm-ansi-brightcyan   . "#5fd7ff")
        (rtfm-ansi-brightwhite  . "#f9f9f3")))

    (mariana
     . ((rtfm-ansi-black        . "#1e1e1e")
        (rtfm-ansi-red          . "#ff5c57")
        (rtfm-ansi-green        . "#5af78e")
        (rtfm-ansi-yellow       . "#f3f99d")
        (rtfm-ansi-blue         . "#57c7ff")
        (rtfm-ansi-magenta      . "#ff6ac1")
        (rtfm-ansi-cyan         . "#9aedfe")
        (rtfm-ansi-white        . "#e2e2e2")
        (rtfm-ansi-brightblack  . "#4a4a4a")
        (rtfm-ansi-brightred    . "#ff5c57")
        (rtfm-ansi-brightgreen  . "#5af78e")
        (rtfm-ansi-brightyellow . "#f3f99d")
        (rtfm-ansi-brightblue   . "#57c7ff")
        (rtfm-ansi-brightmagenta. "#ff6ac1")
        (rtfm-ansi-brightcyan   . "#9aedfe")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (sixteen
     . ((rtfm-ansi-black        . "#202020")
        (rtfm-ansi-red          . "#ff5f5f")
        (rtfm-ansi-green        . "#87d787")
        (rtfm-ansi-yellow       . "#d7d787")
        (rtfm-ansi-blue         . "#5fafd7")
        (rtfm-ansi-magenta      . "#af87d7")
        (rtfm-ansi-cyan         . "#5fd7d7")
        (rtfm-ansi-white        . "#e0e0e0")
        (rtfm-ansi-brightblack  . "#5f5f5f")
        (rtfm-ansi-brightred    . "#ff5f5f")
        (rtfm-ansi-brightgreen  . "#87d787")
        (rtfm-ansi-brightyellow . "#d7d787")
        (rtfm-ansi-brightblue   . "#5fafd7")
        (rtfm-ansi-brightmagenta. "#af87d7")
        (rtfm-ansi-brightcyan   . "#5fd7d7")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (twilight
     . ((rtfm-ansi-black        . "#141414")
        (rtfm-ansi-red          . "#cf6a4c")
        (rtfm-ansi-green        . "#8f9d6a")
        (rtfm-ansi-yellow       . "#f9ee98")
        (rtfm-ansi-blue         . "#7587a6")
        (rtfm-ansi-magenta      . "#9b859d")
        (rtfm-ansi-cyan         . "#afc4db")
        (rtfm-ansi-white        . "#c3c3c3")
        (rtfm-ansi-brightblack  . "#5f5a60")
        (rtfm-ansi-brightred    . "#cf6a4c")
        (rtfm-ansi-brightgreen  . "#8f9d6a")
        (rtfm-ansi-brightyellow . "#f9ee98")
        (rtfm-ansi-brightblue   . "#7587a6")
        (rtfm-ansi-brightmagenta. "#9b859d")
        (rtfm-ansi-brightcyan   . "#afc4db")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (one-dark
     . ((rtfm-ansi-black        . "#282c34")
        (rtfm-ansi-red          . "#e06c75")
        (rtfm-ansi-green        . "#98c379")
        (rtfm-ansi-yellow       . "#e5c07b")
        (rtfm-ansi-blue         . "#61afef")
        (rtfm-ansi-magenta      . "#c678dd")
        (rtfm-ansi-cyan         . "#56b6c2")
        (rtfm-ansi-white        . "#abb2bf")
        (rtfm-ansi-brightblack  . "#353b45")
        (rtfm-ansi-brightred    . "#e06c75")
        (rtfm-ansi-brightgreen  . "#98c379")
        (rtfm-ansi-brightyellow . "#e5c07b")
        (rtfm-ansi-brightblue   . "#61afef")
        (rtfm-ansi-brightmagenta. "#c678dd")
        (rtfm-ansi-brightcyan   . "#56b6c2")
        (rtfm-ansi-brightwhite  . "#c8ccd4")))


    (vscode-dark+
     . ((rtfm-ansi-black        . "#1e1e1e")
        (rtfm-ansi-red          . "#f44747")
        (rtfm-ansi-green        . "#608b4e")
        (rtfm-ansi-yellow       . "#dcdcaa")
        (rtfm-ansi-blue         . "#569cd6")
        (rtfm-ansi-magenta      . "#c586c0")
        (rtfm-ansi-cyan         . "#9cdcfe")
        (rtfm-ansi-white        . "#d4d4d4")
        (rtfm-ansi-brightblack  . "#3e3e42")
        (rtfm-ansi-brightred    . "#d16969")
        (rtfm-ansi-brightgreen  . "#b5cea8")
        (rtfm-ansi-brightyellow . "#ce9178")
        (rtfm-ansi-brightblue   . "#4fc1ff")
        (rtfm-ansi-brightmagenta. "#c586c0")
        (rtfm-ansi-brightcyan   . "#4ec9b0")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (doom-one
     . ((rtfm-ansi-black        . "#282c34")
        (rtfm-ansi-red          . "#ff6c6b")
        (rtfm-ansi-green        . "#98be65")
        (rtfm-ansi-yellow       . "#da8548")
        (rtfm-ansi-blue         . "#51afef")
        (rtfm-ansi-magenta      . "#c678dd")
        (rtfm-ansi-cyan         . "#5699af")
        (rtfm-ansi-white        . "#bbc2cf")
        (rtfm-ansi-brightblack  . "#5b6268")
        (rtfm-ansi-brightred    . "#ff6655")
        (rtfm-ansi-brightgreen  . "#99bb66")
        (rtfm-ansi-brightyellow . "#ecbe7b")
        (rtfm-ansi-brightblue   . "#61afef")
        (rtfm-ansi-brightmagenta. "#c678dd")
        (rtfm-ansi-brightcyan   . "#46d9ff")
        (rtfm-ansi-brightwhite  . "#dfdfdf")))

    (doom-dracula
     . ((rtfm-ansi-black        . "#282a36")
        (rtfm-ansi-red          . "#ff5555")
        (rtfm-ansi-green        . "#50fa7b")
        (rtfm-ansi-yellow       . "#f1fa8c")
        (rtfm-ansi-blue         . "#bd93f9")
        (rtfm-ansi-magenta      . "#ff79c6")
        (rtfm-ansi-cyan         . "#8be9fd")
        (rtfm-ansi-white        . "#f8f8f2")
        (rtfm-ansi-brightblack  . "#6272a4")
        (rtfm-ansi-brightred    . "#ff6e6e")
        (rtfm-ansi-brightgreen  . "#69ff94")
        (rtfm-ansi-brightyellow . "#ffffa5")
        (rtfm-ansi-brightblue   . "#d6acff")
        (rtfm-ansi-brightmagenta. "#ff92df")
        (rtfm-ansi-brightcyan   . "#a4ffff")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (doom-nord
     . ((rtfm-ansi-black        . "#2e3440")
        (rtfm-ansi-red          . "#bf616a")
        (rtfm-ansi-green        . "#a3be8c")
        (rtfm-ansi-yellow       . "#ebcb8b")
        (rtfm-ansi-blue         . "#81a1c1")
        (rtfm-ansi-magenta      . "#b48ead")
        (rtfm-ansi-cyan         . "#88c0d0")
        (rtfm-ansi-white        . "#e5e9f0")
        (rtfm-ansi-brightblack  . "#4c566a")
        (rtfm-ansi-brightred    . "#d08770")
        (rtfm-ansi-brightgreen  . "#8fbcbb")
        (rtfm-ansi-brightyellow . "#eac785")
        (rtfm-ansi-brightblue   . "#5e81ac")
        (rtfm-ansi-brightmagenta. "#b48ead")
        (rtfm-ansi-brightcyan   . "#8fbcbb")
        (rtfm-ansi-brightwhite  . "#eceff4")))

    (doom-gruvbox
     . ((rtfm-ansi-black        . "#282828")
        (rtfm-ansi-red          . "#cc241d")
        (rtfm-ansi-green        . "#98971a")
        (rtfm-ansi-yellow       . "#d79921")
        (rtfm-ansi-blue         . "#458588")
        (rtfm-ansi-magenta      . "#b16286")
        (rtfm-ansi-cyan         . "#689d6a")
        (rtfm-ansi-white        . "#a89984")
        (rtfm-ansi-brightblack  . "#928374")
        (rtfm-ansi-brightred    . "#fb4934")
        (rtfm-ansi-brightgreen  . "#b8bb26")
        (rtfm-ansi-brightyellow . "#fabd2f")
        (rtfm-ansi-brightblue   . "#83a598")
        (rtfm-ansi-brightmagenta. "#d3869b")
        (rtfm-ansi-brightcyan   . "#8ec07c")
        (rtfm-ansi-brightwhite  . "#ebdbb2")))

    (doom-tomorrow-night
     . ((rtfm-ansi-black        . "#1d1f21")
        (rtfm-ansi-red          . "#cc6666")
        (rtfm-ansi-green        . "#b5bd68")
        (rtfm-ansi-yellow       . "#f0c674")
        (rtfm-ansi-blue         . "#81a2be")
        (rtfm-ansi-magenta      . "#b294bb")
        (rtfm-ansi-cyan         . "#8abeb7")
        (rtfm-ansi-white        . "#c5c8c6")
        (rtfm-ansi-brightblack  . "#666666")
        (rtfm-ansi-brightred    . "#d54e53")
        (rtfm-ansi-brightgreen  . "#b9ca4a")
        (rtfm-ansi-brightyellow . "#e7c547")
        (rtfm-ansi-brightblue   . "#7aa6da")
        (rtfm-ansi-brightmagenta. "#c397d8")
        (rtfm-ansi-brightcyan   . "#70c0b1")
        (rtfm-ansi-brightwhite  . "#eaeaea")))

    (doom-iosvkem
     . ((rtfm-ansi-black        . "#262626")
        (rtfm-ansi-red          . "#ff005f")
        (rtfm-ansi-green        . "#afd700")
        (rtfm-ansi-yellow       . "#ffaf00")
        (rtfm-ansi-blue         . "#0087ff")
        (rtfm-ansi-magenta      . "#af87ff")
        (rtfm-ansi-cyan         . "#00afaf")
        (rtfm-ansi-white        . "#bcbcbc")
        (rtfm-ansi-brightblack  . "#4e4e4e")
        (rtfm-ansi-brightred    . "#ff5f87")
        (rtfm-ansi-brightgreen  . "#d7ff00")
        (rtfm-ansi-brightyellow . "#ffd700")
        (rtfm-ansi-brightblue   . "#5fafff")
        (rtfm-ansi-brightmagenta. "#d7afff")
        (rtfm-ansi-brightcyan   . "#00d7d7")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (doom-acario-dark
     . ((rtfm-ansi-black        . "#1a1a1a")
        (rtfm-ansi-red          . "#ff6b6b")
        (rtfm-ansi-green        . "#a8ce93")
        (rtfm-ansi-yellow       . "#f1c27d")
        (rtfm-ansi-blue         . "#7aa2f7")
        (rtfm-ansi-magenta      . "#bb9af7")
        (rtfm-ansi-cyan         . "#7dcfff")
        (rtfm-ansi-white        . "#c0caf5")
        (rtfm-ansi-brightblack  . "#414868")
        (rtfm-ansi-brightred    . "#f7768e")
        (rtfm-ansi-brightgreen  . "#9ece6a")
        (rtfm-ansi-brightyellow . "#e0af68")
        (rtfm-ansi-brightblue   . "#7aa2f7")
        (rtfm-ansi-brightmagenta. "#bb9af7")
        (rtfm-ansi-brightcyan   . "#7dcfff")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (doom-challenger-deep
     . ((rtfm-ansi-black        . "#1e1c31")
        (rtfm-ansi-red          . "#ff5458")
        (rtfm-ansi-green        . "#62d196")
        (rtfm-ansi-yellow       . "#ffb378")
        (rtfm-ansi-blue         . "#65b2ff")
        (rtfm-ansi-magenta      . "#906cff")
        (rtfm-ansi-cyan         . "#63f2f1")
        (rtfm-ansi-white        . "#a6b3cc")
        (rtfm-ansi-brightblack  . "#565575")
        (rtfm-ansi-brightred    . "#ff8080")
        (rtfm-ansi-brightgreen  . "#95ffa4")
        (rtfm-ansi-brightyellow . "#ffe9aa")
        (rtfm-ansi-brightblue   . "#91ddff")
        (rtfm-ansi-brightmagenta. "#c991e1")
        (rtfm-ansi-brightcyan   . "#aaffe4")
        (rtfm-ansi-brightwhite  . "#cbe3e7")))

    (doom-city-lights
     . ((rtfm-ansi-black        . "#1d252c")
        (rtfm-ansi-red          . "#ff5874")
        (rtfm-ansi-green        . "#5fffaf")
        (rtfm-ansi-yellow       . "#ecc48d")
        (rtfm-ansi-blue         . "#5ca7e4")
        (rtfm-ansi-magenta      . "#ff9ac1")
        (rtfm-ansi-cyan         . "#7fdbca")
        (rtfm-ansi-white        . "#718ca1")
        (rtfm-ansi-brightblack  . "#334e68")
        (rtfm-ansi-brightred    . "#ff869a")
        (rtfm-ansi-brightgreen  . "#9effd1")
        (rtfm-ansi-brightyellow . "#f0c989")
        (rtfm-ansi-brightblue   . "#82aaff")
        (rtfm-ansi-brightmagenta. "#ffb3d7")
        (rtfm-ansi-brightcyan   . "#a1ffff")
        (rtfm-ansi-brightwhite  . "#d6deeb")))

    (doom-laserwave
     . ((rtfm-ansi-black        . "#1a1a2a")
        (rtfm-ansi-red          . "#f02e6e")
        (rtfm-ansi-green        . "#72f1b8")
        (rtfm-ansi-yellow       . "#f8f8b8")
        (rtfm-ansi-blue         . "#7e6bc4")
        (rtfm-ansi-magenta      . "#c792ea")
        (rtfm-ansi-cyan         . "#00e8c6")
        (rtfm-ansi-white        . "#b8c5db")
        (rtfm-ansi-brightblack  . "#353154")
        (rtfm-ansi-brightred    . "#ff7eb6")
        (rtfm-ansi-brightgreen  . "#a1f7b5")
        (rtfm-ansi-brightyellow . "#fefeca")
        (rtfm-ansi-brightblue   . "#a4a8ff")
        (rtfm-ansi-brightmagenta. "#e1a6ff")
        (rtfm-ansi-brightcyan   . "#5af7b5")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (doom-molokai
     . ((rtfm-ansi-black        . "#1e1e1e")
        (rtfm-ansi-red          . "#f92672")
        (rtfm-ansi-green        . "#a6e22e")
        (rtfm-ansi-yellow       . "#e6db74")
        (rtfm-ansi-blue         . "#66d9ef")
        (rtfm-ansi-magenta      . "#ae81ff")
        (rtfm-ansi-cyan         . "#a1efe4")
        (rtfm-ansi-white        . "#f8f8f2")
        (rtfm-ansi-brightblack  . "#75715e")
        (rtfm-ansi-brightred    . "#fd971f")
        (rtfm-ansi-brightgreen  . "#9bcf34")
        (rtfm-ansi-brightyellow . "#e6db74")
        (rtfm-ansi-brightblue   . "#5dade2")
        (rtfm-ansi-brightmagenta. "#d336d3")
        (rtfm-ansi-brightcyan   . "#5fd7ff")
        (rtfm-ansi-brightwhite  . "#f9f9f3")))

    (doom-tokyo-night
     . ((rtfm-ansi-black        . "#1a1b26")
        (rtfm-ansi-red          . "#f7768e")
        (rtfm-ansi-green        . "#9ece6a")
        (rtfm-ansi-yellow       . "#e0af68")
        (rtfm-ansi-blue         . "#7aa2f7")
        (rtfm-ansi-magenta      . "#bb9af7")
        (rtfm-ansi-cyan         . "#7dcfff")
        (rtfm-ansi-white        . "#c0caf5")
        (rtfm-ansi-brightblack  . "#414868")
        (rtfm-ansi-brightred    . "#ff7a93")
        (rtfm-ansi-brightgreen  . "#b9f27c")
        (rtfm-ansi-brightyellow . "#ff9e64")
        (rtfm-ansi-brightblue   . "#7da6ff")
        (rtfm-ansi-brightmagenta. "#c0a7f2")
        (rtfm-ansi-brightcyan   . "#a2d8ff")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    (doom-zenburn
     . ((rtfm-ansi-black        . "#3f3f3f")
        (rtfm-ansi-red          . "#cc9393")
        (rtfm-ansi-green        . "#7f9f7f")
        (rtfm-ansi-yellow       . "#f0dfaf")
        (rtfm-ansi-blue         . "#8cd0d3")
        (rtfm-ansi-magenta      . "#dc8cc3")
        (rtfm-ansi-cyan         . "#93e0e3")
        (rtfm-ansi-white        . "#dcdccc")
        (rtfm-ansi-brightblack  . "#709080")
        (rtfm-ansi-brightred    . "#dca3a3")
        (rtfm-ansi-brightgreen  . "#9faf8f")
        (rtfm-ansi-brightyellow . "#e0cf9f")
        (rtfm-ansi-brightblue   . "#94bff3")
        (rtfm-ansi-brightmagenta. "#ec93d3")
        (rtfm-ansi-brightcyan   . "#9ce0e3")
        (rtfm-ansi-brightwhite  . "#ffffff")))

    ;; (spacemacs-dark
    ;;  . ((rtfm-ansi-black        . "#1f2022")
    ;;     (rtfm-ansi-red          . "#f2241f")
    ;;     (rtfm-ansi-green        . "#67b11d")
    ;;     (rtfm-ansi-yellow       . "#b1951d")
    ;;     (rtfm-ansi-blue         . "#4f97d7")
    ;;     (rtfm-ansi-magenta      . "#a31db1")
    ;;     (rtfm-ansi-cyan         . "#2d9574")
    ;;     (rtfm-ansi-white        . "#a3a3a3")
    ;;     (rtfm-ansi-brightblack  . "#585858")
    ;;     (rtfm-ansi-brightred    . "#ff5d62")
    ;;     (rtfm-ansi-brightgreen  . "#86dc2f")
    ;;     (rtfm-ansi-brightyellow . "#e5d11c")
    ;;     (rtfm-ansi-brightblue   . "#5ca7e4")
    ;;     (rtfm-ansi-brightmagenta. "#d337d3")
    ;;     (rtfm-ansi-brightcyan   . "#2cd1d1")
    ;;     (rtfm-ansi-brightwhite  . "#f8f8f2")))

    (spacemacs-dark
     . ((rtfm-ansi-black        . "#292b2e")
        (rtfm-ansi-red          . "#f2241f")
        (rtfm-ansi-green        . "#67b11d")
        (rtfm-ansi-yellow       . "#b1951d")
        (rtfm-ansi-blue         . "#4f97d7")
        (rtfm-ansi-magenta      . "#a31db1")
        (rtfm-ansi-cyan         . "#28def0")
        (rtfm-ansi-white        . "#b2b2b2")
        (rtfm-ansi-brightblack  . "#686868")
        (rtfm-ansi-brightred    . "#e0211d")
        (rtfm-ansi-brightgreen  . "#86dc2f")
        (rtfm-ansi-brightyellow . "#dc752f")
        (rtfm-ansi-brightblue   . "#5d77a3")
        (rtfm-ansi-brightmagenta. "#c56ec3")
        (rtfm-ansi-brightcyan   . "#2aa1ae")
        (rtfm-ansi-brightwhite  . "#f8f8f2")))

    (spacemacs-light
     . ((rtfm-ansi-black        . "#fbf8ef")
        (rtfm-ansi-red          . "#f2241f")
        (rtfm-ansi-green        . "#67b11d")
        (rtfm-ansi-yellow       . "#b1951d")
        (rtfm-ansi-blue         . "#3a81c3")
        (rtfm-ansi-magenta      . "#a31db1")
        (rtfm-ansi-cyan         . "#21b8c7")
        (rtfm-ansi-white        . "#655370")
        (rtfm-ansi-brightblack  . "#a094a2")
        (rtfm-ansi-brightred    . "#e0211d")
        (rtfm-ansi-brightgreen  . "#42ae2c")
        (rtfm-ansi-brightyellow . "#dc752f")
        (rtfm-ansi-brightblue   . "#715ab1")
        (rtfm-ansi-brightmagenta. "#6c4173")
        (rtfm-ansi-brightcyan   . "#2aa1ae")
        (rtfm-ansi-brightwhite  . "#100a14")))

    (atelier-dune
     . ((rtfm-ansi-black        . "#20201d")
        (rtfm-ansi-red          . "#d73737")
        (rtfm-ansi-green        . "#60ac39")
        (rtfm-ansi-yellow       . "#ae9513")
        (rtfm-ansi-blue         . "#6684e1")
        (rtfm-ansi-magenta      . "#b854d4")
        (rtfm-ansi-cyan         . "#1fad83")
        (rtfm-ansi-white        . "#a6a28c")
        (rtfm-ansi-brightblack  . "#7d7a68")
        (rtfm-ansi-brightred    . "#d73737")
        (rtfm-ansi-brightgreen  . "#60ac39")
        (rtfm-ansi-brightyellow . "#ae9513")
        (rtfm-ansi-brightblue   . "#6684e1")678be3
        (rtfm-ansi-brightmagenta. "#b854d4")
        (rtfm-ansi-brightcyan   . "#1fad83")
        (rtfm-ansi-brightwhite  . "#fefbec")))

    (atelier-forest
     . ((rtfm-ansi-black        . "#1b1918")
        (rtfm-ansi-red          . "#f22c40")
        (rtfm-ansi-green        . "#7b9726")
        (rtfm-ansi-yellow       . "#c38418")
        (rtfm-ansi-blue         . "#407ee7")
        (rtfm-ansi-magenta      . "#6666ea")
        (rtfm-ansi-cyan         . "#3d97b8")
        (rtfm-ansi-white        . "#a8a19f")
        (rtfm-ansi-brightblack  . "#766e6b")
        (rtfm-ansi-brightred    . "#f22c40")
        (rtfm-ansi-brightgreen  . "#7b9726")
        (rtfm-ansi-brightyellow . "#c38418")
        (rtfm-ansi-brightblue   . "#407ee7")
        (rtfm-ansi-brightmagenta. "#6666ea")
        (rtfm-ansi-brightcyan   . "#3d97b8")
        (rtfm-ansi-brightwhite  . "#f1efee")))

    (atelier-heath
     . ((rtfm-ansi-black        . "#1b181b")
        (rtfm-ansi-red          . "#ca402b")
        (rtfm-ansi-green        . "#918b3b")
        (rtfm-ansi-yellow       . "#bb8a35")
        (rtfm-ansi-blue         . "#516aec")
        (rtfm-ansi-magenta      . "#7b59c0")
        (rtfm-ansi-cyan         . "#159393")
        (rtfm-ansi-white        . "#ab9bab")
        (rtfm-ansi-brightblack  . "#776977")
        (rtfm-ansi-brightred    . "#ca402b")
        (rtfm-ansi-brightgreen  . "#918b3b")
        (rtfm-ansi-brightyellow . "#bb8a35")
        (rtfm-ansi-brightblue   . "#516aec")
        (rtfm-ansi-brightmagenta. "#7b59c0")
        (rtfm-ansi-brightcyan   . "#159393")
        (rtfm-ansi-brightwhite  . "#f7f3f7")))

    (atelier-lakeside
     . ((rtfm-ansi-black        . "#161b1d")
        (rtfm-ansi-red          . "#d22d72")
        (rtfm-ansi-green        . "#568c3b")
        (rtfm-ansi-yellow       . "#8a8a0f")
        (rtfm-ansi-blue         . "#257fad")
        (rtfm-ansi-magenta      . "#6b6bb8")
        (rtfm-ansi-cyan         . "#2d8f6f")
        (rtfm-ansi-white        . "#7ea2b4")
        (rtfm-ansi-brightblack  . "#5a7b8c")
        (rtfm-ansi-brightred    . "#d22d72")
        (rtfm-ansi-brightgreen  . "#568c3b")
        (rtfm-ansi-brightyellow . "#8a8a0f")
        (rtfm-ansi-brightblue   . "#257fad")
        (rtfm-ansi-brightmagenta. "#6b6bb8")
        (rtfm-ansi-brightcyan   . "#2d8f6f")
        (rtfm-ansi-brightwhite  . "#ebf8ff")))

    (atelier-seaside
     . ((rtfm-ansi-black        . "#131513")
        (rtfm-ansi-red          . "#e6193c")
        (rtfm-ansi-green        . "#29a329")
        (rtfm-ansi-yellow       . "#98981b")
        (rtfm-ansi-blue         . "#3d62f5")
        (rtfm-ansi-magenta      . "#ad2bee")
        (rtfm-ansi-cyan         . "#1999b3")
        (rtfm-ansi-white        . "#8ca68c")
        (rtfm-ansi-brightblack  . "#687d68")
        (rtfm-ansi-brightred    . "#e6193c")
        (rtfm-ansi-brightgreen  . "#29a329")
        (rtfm-ansi-brightyellow . "#98981b")
        (rtfm-ansi-brightblue   . "#3d62f5")
        (rtfm-ansi-brightmagenta. "#ad2bee")
        (rtfm-ansi-brightcyan   . "#1999b3")
        (rtfm-ansi-brightwhite  . "#f4fbf4")))

    (atelier-sulphurpool
     . ((rtfm-ansi-black        . "#202746")
        (rtfm-ansi-red          . "#c94922")
        (rtfm-ansi-green        . "#ac9739")
        (rtfm-ansi-yellow       . "#c08b30")
        (rtfm-ansi-blue         . "#3d8fd1")
        (rtfm-ansi-magenta      . "#6679cc")
        (rtfm-ansi-cyan         . "#22a2c9")
        (rtfm-ansi-white        . "#979db4")
        (rtfm-ansi-brightblack  . "#6b7394")
        (rtfm-ansi-brightred    . "#c94922")
        (rtfm-ansi-brightgreen  . "#ac9739")
        (rtfm-ansi-brightyellow . "#c08b30")
        (rtfm-ansi-brightblue   . "#3d8fd1")
        (rtfm-ansi-brightmagenta. "#6679cc")
        (rtfm-ansi-brightcyan   . "#22a2c9")
        (rtfm-ansi-brightwhite  . "#f5f7ff")))

    (github-dark
     . ((rtfm-ansi-black        . "#0d1117")
        (rtfm-ansi-red          . "#ff7b72")
        (rtfm-ansi-green        . "#7ee787")
        (rtfm-ansi-yellow       . "#f2cc60")
        (rtfm-ansi-blue         . "#79c0ff")
        (rtfm-ansi-magenta      . "#d2a8ff")
        (rtfm-ansi-cyan         . "#a5d6ff")
        (rtfm-ansi-white        . "#c9d1d9")
        (rtfm-ansi-brightblack  . "#484f58")
        (rtfm-ansi-brightred    . "#ffa198")
        (rtfm-ansi-brightgreen  . "#56d364")
        (rtfm-ansi-brightyellow . "#e3b341")
        (rtfm-ansi-brightblue   . "#58a6ff")
        (rtfm-ansi-brightmagenta. "#bc8cff")
        (rtfm-ansi-brightcyan   . "#56d4dd")
        (rtfm-ansi-brightwhite  . "#f0f6fc")))


    (github-light
     . ((rtfm-ansi-black        . "#ffffff")
        (rtfm-ansi-red          . "#d73a49")
        (rtfm-ansi-green        . "#28a745")
        (rtfm-ansi-yellow       . "#dbab09")
        (rtfm-ansi-blue         . "#0366d6")
        (rtfm-ansi-magenta      . "#5a32a3")
        (rtfm-ansi-cyan         . "#0598bc")
        (rtfm-ansi-white        . "#24292e")
        (rtfm-ansi-brightblack  . "#e1e4e8")
        (rtfm-ansi-brightred    . "#cb2431")
        (rtfm-ansi-brightgreen  . "#22863a")
        (rtfm-ansi-brightyellow . "#b08800")
        (rtfm-ansi-brightblue   . "#005cc5")
        (rtfm-ansi-brightmagenta. "#4f2a9a")
        (rtfm-ansi-brightcyan   . "#0086b3")
        (rtfm-ansi-brightwhite  . "#1b1f23")))

    (one-light
     . ((rtfm-ansi-black        . "#fafafa")
        (rtfm-ansi-red          . "#e45649")
        (rtfm-ansi-green        . "#50a14f")
        (rtfm-ansi-yellow       . "#c18401")
        (rtfm-ansi-blue         . "#4078f2")
        (rtfm-ansi-magenta      . "#a626a4")
        (rtfm-ansi-cyan         . "#0184bc")
        (rtfm-ansi-white        . "#383a42")
        (rtfm-ansi-brightblack  . "#e5e5e6")
        (rtfm-ansi-brightred    . "#ca1243")
        (rtfm-ansi-brightgreen  . "#86b300")
        (rtfm-ansi-brightyellow . "#f2a60d")
        (rtfm-ansi-brightblue   . "#3a5bcd")
        (rtfm-ansi-brightmagenta. "#9b2393")
        (rtfm-ansi-brightcyan   . "#0098dd")
        (rtfm-ansi-brightwhite  . "#202227")))

    (gruvbox-light
     . ((rtfm-ansi-black        . "#fbf1c7")   ; Background
        (rtfm-ansi-red          . "#cc241d")   ; Errors
        (rtfm-ansi-green        . "#98971a")   ; Strings
        (rtfm-ansi-yellow       . "#d79921")   ; Keywords
        (rtfm-ansi-blue         . "#458588")   ; Functions
        (rtfm-ansi-magenta      . "#b16286")   ; Special
        (rtfm-ansi-cyan         . "#689d6a")   ; Tags
        (rtfm-ansi-white        . "#3c3836")   ; Foreground
        (rtfm-ansi-brightblack  . "#ebdbb2")   ; Comments
        (rtfm-ansi-brightred    . "#9d0006")   ; Strong errors
        (rtfm-ansi-brightgreen  . "#79740e")   ; Strong strings
        (rtfm-ansi-brightyellow . "#b57614")   ; Strong keywords
        (rtfm-ansi-brightblue   . "#076678")   ; Strong functions
        (rtfm-ansi-brightmagenta. "#8f3f71")   ; Strong special
        (rtfm-ansi-brightcyan   . "#427b58")   ; Strong tags
        (rtfm-ansi-brightwhite  . "#282828"))) ; Bold text

    (papercolor-light
     . ((rtfm-ansi-black        . "#eeeeee")
        (rtfm-ansi-red          . "#af0000")
        (rtfm-ansi-green        . "#008700")
        (rtfm-ansi-yellow       . "#5f8700")
        (rtfm-ansi-blue         . "#0087af")
        (rtfm-ansi-magenta      . "#878787")
        (rtfm-ansi-cyan         . "#005f87")
        (rtfm-ansi-white        . "#444444")
        (rtfm-ansi-brightblack  . "#bcbcbc")
        (rtfm-ansi-brightred    . "#d70000")
        (rtfm-ansi-brightgreen  . "#d70087")
        (rtfm-ansi-brightyellow . "#8700af")
        (rtfm-ansi-brightblue   . "#d75f00")
        (rtfm-ansi-brightmagenta. "#d75f00")
        (rtfm-ansi-brightcyan   . "#005faf")
        (rtfm-ansi-brightwhite  . "#005f87")))

    (ayu-dark
     . ((rtfm-ansi-black        . "#0a0e14")
        (rtfm-ansi-red          . "#ff3333")
        (rtfm-ansi-green        . "#b8cc52")
        (rtfm-ansi-yellow       . "#e6c446")
        (rtfm-ansi-blue         . "#36a3d9")
        (rtfm-ansi-magenta      . "#f07078")
        (rtfm-ansi-cyan         . "#95e6cb")
        (rtfm-ansi-white        . "#e6e1cf")
        (rtfm-ansi-brightblack  . "#4d5566")
        (rtfm-ansi-brightred    . "#ff6565")
        (rtfm-ansi-brightgreen  . "#d2e865")
        (rtfm-ansi-brightyellow . "#ffe14d")
        (rtfm-ansi-brightblue   . "#68d4ff")
        (rtfm-ansi-brightmagenta. "#ff8f8f")
        (rtfm-ansi-brightcyan   . "#a8ffdb")
        (rtfm-ansi-brightwhite  . "#f8f8f0")))

    (ayu-light
     . ((rtfm-ansi-black        . "#fafafa")
        (rtfm-ansi-red          . "#ff3333")
        (rtfm-ansi-green        . "#86b300")
        (rtfm-ansi-yellow       . "#f29718")
        (rtfm-ansi-blue         . "#41a6d9")
        (rtfm-ansi-magenta      . "#f07178")
        (rtfm-ansi-cyan         . "#4dbf99")
        (rtfm-ansi-white        . "#5c6773")
        (rtfm-ansi-brightblack  . "#e6e1cf")
        (rtfm-ansi-brightred    . "#ff6565")
        (rtfm-ansi-brightgreen  . "#b8cc52")
        (rtfm-ansi-brightyellow . "#ffb454")
        (rtfm-ansi-brightblue   . "#68d4ff")
        (rtfm-ansi-brightmagenta. "#ff8f8f")
        (rtfm-ansi-brightcyan   . "#a8ffdb")
        (rtfm-ansi-brightwhite  . "#8a9199"))))
  "List of color palettes for themes."
  :type '(alist :key-type symbol :value-type (repeat color))
  :group 'rtfm-simple-theme)

#+END_SRC

* Define a macro to dynamically generate themes
#+BEGIN_SRC emacs-lisp

(defmacro rtfm-define-theme (name)
  ;; Macro assumes rtfm-selected-palette = name internally
  `(let* ((color-cells (display-color-cells))
          (palette (cdr (assoc ',name rtfm-color-palettes)))
          (rtfm_simple/base00 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-black palette)) "black"))
          (rtfm_simple/base01 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightgreen palette)) "brightgreen"))
          (rtfm_simple/base02 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightyellow palette)) "brightyellow"))
          (rtfm_simple/base03 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightblack palette)) "brightblack"))
          (rtfm_simple/base04 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightblue palette)) "brightblue"))
          (rtfm_simple/base05 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-white palette)) "white"))
          (rtfm_simple/base06 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightmagenta palette)) "brightmagenta"))
          (rtfm_simple/base07 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightwhite palette)) "brightwhite"))
          (rtfm_simple/base08 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-red palette)) "red"))
          (rtfm_simple/base09 (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightred palette)) "brightred"))
          (rtfm_simple/base0A (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-yellow palette)) "yellow"))
          (rtfm_simple/base0B (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-green palette)) "green"))
          (rtfm_simple/base0C (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-cyan palette)) "cyan"))
          (rtfm_simple/base0D (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-blue palette)) "blue"))
          (rtfm_simple/base0E (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-magenta palette)) "magenta"))
          (rtfm_simple/base0F (if (and palette (> color-cells 256)) (cdr (assoc 'rtfm-ansi-brightcyan palette)) "brightcyan")))
     (deftheme ,(intern (concat "rtfm-" (symbol-name name)))
       ,(format "rtfm theme: %s" (concat "rtfm-" (symbol-name name))))

     (custom-theme-set-faces
      ',(intern (concat "rtfm-" (symbol-name name)))
      `(bold                         ((t (:bold t))))
      `(bold-italic                  ((t (:bold t))))
      `(border-glyph                 ((t (nil))))
      `(buffers-tab                  ((t (:foreground ,rtfm_simple/base05 :background ,rtfm_simple/base00))))
      `(hl-line                      ((t (:inherit default :underline t))))     ;; Highlight line background 
      ;; `(region                       ((t (:background ,rtfm_simple/base02))))     ;; Selection region color 
      ;; `(italic                       ((t (nil))))
      `(left-margin                  ((t (nil))))
      `(toolbar                      ((t (nil))))
      ;; `(underline                    ((nil (:underline nil))))))

;;;; basic colors
      `(border                                       ((t (:background ,rtfm_simple/base03))))
      `(cursor                                       ((t (:background ,rtfm_simple/base08))))
      `(default                                      ((t (:foreground ,rtfm_simple/base05 :background ,rtfm_simple/base00))))
      ;; `(fringe                                       ((t (:background ,rtfm_simple/base16-settings-fringe-bg))))
      `(fringe                       ((t (:background ,rtfm_simple/base00))))
      `(gui-element                                  ((t (:background ,rtfm_simple/base01))))
      `(header-line                                  ((t (:inherit default))))
      `(highlight                                    ((t (:background ,rtfm_simple/base00))))
      `(link                                         ((t (:foreground ,rtfm_simple/base0D :underline t))))
      `(link-visited                                 ((t (:foreground ,rtfm_simple/base0E :underline t))))
      `(minibuffer-prompt                            ((t (:foreground ,rtfm_simple/base0D))))
      ;; `(region                                       ((t (:background ,rtfm_simple/base03 :distant-foreground ,rtfm_simple/base05))))
      `(region
        ((((class color) (min-colors 257))
          (:background ,rtfm_simple/base03 :distant-foreground ,rtfm_simple/base05))
         (((class color) (min-colors 256))
          (:background ,rtfm_simple/base03 :foreground ,rtfm_simple/base05))))

      `(secondary-selection                          ((t (:inherit 'default :distant-foreground ,rtfm_simple/base05 :inverse-video t))))
      ;; `(trailing-whitespace                          ((t (:foreground ,rtfm_simple/base0A :background ,rtfm_simple/base0C))))
      `(vertical-border                              ((t (:foreground ,rtfm_simple/base02))))
      `(widget-button                                ((t (:underline t))))
      `(widget-field                                 ((t (:background ,rtfm_simple/base03 :box (:line-width 1 :color ,rtfm_simple/base06)))))

      `(error                                        ((t (:foreground ,rtfm_simple/base08 :weight bold))))
      `(warning                                      ((t (:foreground ,rtfm_simple/base09 :weight bold))))
      `(success                                      ((t (:foreground ,rtfm_simple/base0B :weight bold))))
      `(shadow                                       ((t (:foreground ,rtfm_simple/base03))))
      
;;;; font-lock
      `(font-lock-builtin-face                       ((t (:foreground ,rtfm_simple/base0C))))
      `(font-lock-comment-delimiter-face             ((t (:foreground ,rtfm_simple/base03))))
      `(font-lock-comment-face                       ((t (:foreground ,rtfm_simple/base03 ;; :italic t
                                                                      ))))
      `(font-lock-constant-face                      ((t (:foreground ,rtfm_simple/base09))))
      `(font-lock-doc-face                           ((t (:foreground ,rtfm_simple/base04))))
      `(font-lock-doc-string-face                    ((t (:foreground ,rtfm_simple/base03))))
      `(font-lock-function-name-face                 ((t (:foreground ,rtfm_simple/base0D))))
      `(font-lock-keyword-face                       ((t (:foreground ,rtfm_simple/base0E))))
      `(font-lock-negation-char-face                 ((t (:foreground ,rtfm_simple/base0B))))
      `(font-lock-preprocessor-face                  ((t (:foreground ,rtfm_simple/base0D))))
      `(font-lock-regexp-grouping-backslash          ((t (:foreground ,rtfm_simple/base0A))))
      `(font-lock-regexp-grouping-construct          ((t (:foreground ,rtfm_simple/base0E))))
      `(font-lock-string-face                        ((t (:foreground ,rtfm_simple/base0B))))
      `(font-lock-type-face                          ((t (:foreground ,rtfm_simple/base0A))))
      `(font-lock-variable-name-face                 ((t (:foreground ,rtfm_simple/base08))))
      `(font-lock-warning-face                       ((t (:foreground ,rtfm_simple/base08))))

;;;; ansi-colors
      `(ansi-color-black                             ((t (:foreground ,rtfm_simple/base00))))
      `(ansi-color-red                               ((t (:foreground ,rtfm_simple/base08))))
      `(ansi-color-green                             ((t (:foreground ,rtfm_simple/base0B))))
      `(ansi-color-yellow                            ((t (:foreground ,rtfm_simple/base0A))))
      `(ansi-color-blue                              ((t (:foreground ,rtfm_simple/base0D))))
      `(ansi-color-magenta                           ((t (:foreground ,rtfm_simple/base0E))))
      `(ansi-color-cyan                              ((t (:foreground ,rtfm_simple/base0C))))
      `(ansi-color-white                             ((t (:foreground ,rtfm_simple/base05))))
      
      `(ansi-color-bright-black                       ((t (:foreground ,rtfm_simple/base03))))
      `(ansi-color-bright-red                         ((t (:foreground ,rtfm_simple/base09))))
      `(ansi-color-bright-green                       ((t (:foreground ,rtfm_simple/base01))))
      `(ansi-color-bright-yellow                      ((t (:foreground ,rtfm_simple/base02))))
      `(ansi-color-bright-blue                        ((t (:foreground ,rtfm_simple/base04))))
      `(ansi-color-brgight-magenta                    ((t (:foreground ,rtfm_simple/base06))))
      `(ansi-color-bright-cyan                        ((t (:foreground ,rtfm_simple/base0F))))
      `(ansi-color-bright-white                       ((t (:foreground ,rtfm_simple/base07))))

     ;;; modeline
      `(mode-line                             ((t (:inherit variable-pitch :foreground ,rtfm_simple/base00 :background ,rtfm_simple/base05 :box nil))))
      `(mode-line-inactive ((t (:inherit variable-pitch :foreground ,rtfm_simple/base05 :background ,rtfm_simple/base03 :box nil))))
      `(mode-line-buffer-id ((t (:inherit variable-pitch :foreground ,(face-background 'region) :distant-foreground ,(face-background 'highlight)))))
      ;; ... more face definitions here ...
      )
     (provide-theme ',(intern (concat "rtfm-" (symbol-name name))))))

#+END_SRC

* use the macro to generate the theme

#+BEGIN_SRC emacs-lisp
(defun rtfm-generate-theme-files (output-dir)
  (dolist (palette rtfm-color-palettes)
    (let* ((name (symbol-name (car palette)))
           (file-name (expand-file-name (format "rtfm-%s-theme.el" name) output-dir))
           (themegenerator-path (expand-file-name "compiled/" user-emacs-directory))
           (content
            (format
             ";;; %s-theme.el --- autogenerated theme\n\n\
(add-to-list 'load-path \"%s\")\n\
(require 'themer)\n\
(rtfm-define-theme %s)\n\n\
(provide-theme '%s)\n\n;;; %s-theme.el ends here\n"
             name themegenerator-path name (concat "rtfm-" name) (concat "rtfm-" name))))
      (with-temp-file file-name
        (insert content)))))

(let ((output-dir (expand-file-name "themes/" user-emacs-directory)))
  (unless (file-directory-p output-dir)
    (make-directory output-dir t))
  (rtfm-generate-theme-files output-dir))
#+END_SRC

* provide themer

#+BEGIN_SRC emacs-lisp

(provide 'themer)

#+END_SRC
